# Generated by Django 3.2.9 on 2022-01-24 09:59

import ckeditor.fields
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False)),
                ('is_guide', models.BooleanField(default=False)),
                ('is_hod', models.BooleanField(default=False)),
                ('is_industry_mentor', models.BooleanField(default=False)),
                ('is_coordinator', models.BooleanField(default=False)),
                ('is_project_creator', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=13)),
                ('email', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('timeStamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('div', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enroll', models.CharField(default=' ', max_length=20)),
                ('slug', models.SlugField(blank=True, max_length=1000, null=True)),
                ('date_enrolled', models.DateField()),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.batch')),
                ('guide_or_industry_mentor', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['enroll'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(default=' ', max_length=80)),
                ('slug', models.SlugField(blank=True, max_length=1000, null=True)),
                ('project_description', models.TextField(blank=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departmentname')),
            ],
            options={
                'ordering': ['project_name'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=1000, null=True)),
                ('task_name', models.CharField(default=' ', max_length=80)),
                ('task_description', models.TextField(blank=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('reference_file', models.FileField(blank=True, upload_to='documents/')),
                ('reference_link', models.CharField(blank=True, default=' ', max_length=80)),
                ('Duration', models.DurationField()),
                ('task_percentage', models.IntegerField(blank=True, null=True)),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.project')),
            ],
            options={
                'ordering': ['project', 'task_name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.CharField(default=' ', max_length=20)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('sno', models.AutoField(primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('timestamp', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.taskcomment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(default=' ', max_length=20)),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.batch')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departmentname')),
                ('div', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.division')),
                ('project', models.ManyToManyField(blank=True, to='accounts.Project')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='RequestedProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.batch')),
                ('requested_project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.project')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.team')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCreator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='teams',
            field=models.ManyToManyField(blank=True, through='accounts.Enroll', to='accounts.Team'),
        ),
        migrations.CreateModel(
            name='IndustryMentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('designation', models.CharField(default=' ', max_length=20)),
                ('worked_experience', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Hod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_id', models.CharField(default=' ', max_length=20)),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departmentname')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_id', models.CharField(default=' ', max_length=20)),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('designation', models.CharField(default=' ', max_length=20)),
                ('worked_experience', models.TextField(blank=True)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departmentname')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.AddField(
            model_name='enroll',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.project'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.team'),
        ),
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_id', models.CharField(default=' ', max_length=20)),
                ('phone_number', models.CharField(default=' ', max_length=20)),
                ('designation', models.CharField(default=' ', max_length=20)),
                ('image', models.ImageField(default='user.png', upload_to='profile_pics/')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departmentname')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, max_length=1000, null=True)),
                ('task_start_date', models.DateTimeField(blank=True, null=True)),
                ('today', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('task_end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Yet to start', 'Yet to start'), ('Working', 'Working'), ('Done', 'Done')], default='Yet to start', max_length=20)),
                ('submission_file', models.FileField(blank=True, upload_to='documents/')),
                ('submission', models.CharField(choices=[('Not Submitted', 'Not Submitted'), ('In Review', 'In Review'), ('Rejected', 'Rejected'), ('Approved', 'Approved')], default='Not Submitted', max_length=20)),
                ('enrolled_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.enroll')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.task')),
            ],
            options={
                'ordering': ['slug', 'status'],
                'unique_together': {('enrolled_to', 'task')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='enroll',
            unique_together={('project', 'team')},
        ),
    ]
